# SSH Configuration
if [ -z "$SSH_AUTH_SOCK" ]; then
    eval "$(ssh-agent -s > /dev/null 2>&1)"
fi

if ! ssh-add -l > /dev/null 2>&1; then
    ssh-add ~/.ssh/id_rsa_hapeArchibald > /dev/null 2>&1
    ssh-add ~/.ssh/id_rsa_rb_led_pi_2024_11_13 > /dev/null 2>&1
    ssh-add ~/.ssh/id_ed25519 > /dev/null 2>&1
    ssh-add ~/.ssh/id_rsa_ubuntu_work > /dev/null 2>&1
fi

# Editor Configuration Based on SSH Connection
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

export VISUAL='nvim'

# Keybind Configs
bindkey -v
export KEYTIMEOUT=1

# General Paths & Dependencies
export PATH="$HOME/Apps/nvim-linux64/bin:$HOME/bin:/usr/local/bin:$PATH"
export PATH=$PATH:$HOME/.todo.txt-cli
export PATH=$PATH:~/.local/share/flatpak/exports/bin
export PATH=$PATH:/var/lib/flatpak/exports/bin
export PATH="$HOME/.cargo/bin:$PATH"

# for docker dev container in vscode: 
export DOCKER_BUILDKIT=0

# NVM Configuration
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Pyenv Configuration
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - bash)"
eval "$(pyenv virtualenv-init -)"

# Perl Configuration
export PATH="/home/dennis/perl5/bin${PATH:+:${PATH}}"
export PERL5LIB="/home/dennis/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="/home/dennis/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"/home/dennis/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/dennis/perl5"

# User Identification
export USER_ID=$(id -u)
export GROUP_ID=$(id -g)

# Default Applications
export EDITOR='nvim'
export BROWSER='firefox'


# Aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias t="todo.sh"
alias n="nvim"
alias b="batcat"
alias a="jibidi -t \""
alias pinkel="ping 8.8.8.8"
alias :e="nvim"
alias nicer_slicer_gui="ssh -X dennis@NicerSlicer 'prusa-slicer'"
alias k='feh ~/keyboard_layouts/*'
alias mount_cm4="sudo ./workbench/usbboot/rpiboot"
alias ra='joshuto'
alias addcard='/home/dennis/workbench/rust_testing/anki_card_manager/target/debug/anki_card_manager'
alias clippit="xclip -selection clipboard"
alias please='sudo $(fc -ln -1)'
alias pushcommitadddotfiles='cd ~/dotfiles/ && git add . && git commit -m "..." && git push'

# OpenAI GPT CLI
jibidi() {
    export OPENAI_API_KEY=$(<~/.openai_api_key)
    ~/gpt_py_cli/venv/bin/python ~/gpt_py_cli/CliManager.py "$@"
    unset OPENAI_API_KEY
}


# Create new tmux Alacritty session with same path
cw() {
   local current_path=$(pwd)
   alacritty -e tmux new-session -c "$current_path" &
}

# Cleanup tmux sessions
alias tmux_clean='tmux list-sessions -F "#{session_attached} #{session_id}" | awk "\$1 == 0 {print \$2}" | xargs -I {} tmux kill-session -t {}'
